Part I
Write the code necessary to do the following:

1. Create an empty array called arr.
2. Add your first name to the arr variable
3. Add your last name to the end of the arr variable
4. Add your favorite color to the beginning of the arr variable
Your variable arr should look like this (using Elie for a first name, Schoppik for a last name and purple for a favorite color) ["purple", "Elie", "Schoppik"]. Keep going!
5. Remove the favorite color from the arr variable (remember this is the first value in the array - what method can you use to remove the first value in an array?)
6. Create another array called arr2.
7. Add your favorite number to arr2
8. Add the string "JavaScript" to the end of the arr2 variable
Your variable arr2 should look like this (using 42 as a favorite number) [42, "JavaScript"].
9. See if the value 42 exists in the arr2 array. Do this using the indexOf method. What does indexOf return to you if the value passed to it can not be found in the array?
10. Create a new variable called combinedArr which is the result of your arr and arr2 variables combined into one array.
Your combinedArr variable should look like this (using our previous values) ["Elie", "Schoppik", 42, "JavaScript"]

Part II
Complete the following, starting from the following array: let arr = ["JavaScript", "Python", "Ruby", "Java"]
1. Return the following array: ["Python", "Ruby"].
2. Combine the array with the array ["Haskell", "Clojure"].
3. Return the string "JavaScript, Python, Ruby, Java".
4. Try to explain, in your own words (or diagrams!) what the difference is between passing by value vs. passing by reference.




Solutions
Part I

1. let arr = [];

2. arr.push("Elie");
arr;

3. arr.push("Schoppik");
arr;

4. arr.unshift("purple");
arr; // ["purple", "Elie", "Schoppik"]

5. arr.shift();

6. let arr2 = [];

7. arr2.unshift(42);

8. arr2.push("JavaScript");
arr2;

9. arr2.indexOf(42);
An indexOf return to you -1 if the value passed to it can not be found in the array.

10. let combinedArr = arr.concat(arr2);


Part II

let arr = ["JavaScript", "Python", "Ruby", "Java"];

1. Return the following array: ["Python", "Ruby"]
let wrap = arr.slice(1, 3);
wrap;

2. Combine the array with the array ["Haskell", "Clojure"]
wrap.concat("Haskell", "Clojure");

3. Return the string "JavaScript, Python, Ruby, Java".
arr.join(", ");

4. Passing by value:

Primitive types have a specific address in memory, such that, when we declare a variable say instructor, and assign it with, in this case, a string value, say, "Elie", then re-assign that variable to another variable, say, anotherInstructor. JavaScript creates a copy of the string "Elie" and assigns that value to anotherInstructor. So even though those two variables were storing identical-looking strings, they can be modified independently of one another. Whereas, in 

Passing by reference:

JavaScript doesn't create a copy of the string "Elie". Instead, both variable names refer to the exact same array!